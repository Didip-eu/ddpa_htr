.. DiDip Handwriting Datasets documentation master file, created by
   sphinx-quickstart on Sun Nov  3 09:57:03 2024.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

***************************
HTR Mini-apps
***************************

Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`


How to use 
====================================

VGSL
=================

Note: by convention, VGSL specifies the dimensions in NHWC order, while Torch uses NCHW. The example
below uses a NHWC = (1, 64, 2048, 3) image as an input.

+-------------+------------------------------------------+-------------------------+--------------------+
| VGSL        | DESCRIPTION                              | Output size (NHWC)      | Output size (NCHW) |
+=============+==========================================+=========================+====================+
| Cr3,13,32   | kernel filter 3x13, 32 activations relu  | 1, 64, 2048, 32         | 1, 32, 64, 2048    |
+-------------+------------------------------------------+-------------------------+--------------------+
| Do0.1,2     | dropout prob 0.1 dims 2                  | -                       | -                  |
+-------------+------------------------------------------+-------------------------+--------------------+
| Mp2,2       | Max Pool kernel 2x2 stride 2x2           | 1, 32, 1024, 32         | 1, 32, 32, 1024    | 
+-------------+------------------------------------------+-------------------------+--------------------+
| ...         | (same)                                   | 1, 16,  512, 32         | 1, 32, 16, 512     |
| Cr3,9,64    | kernel filter 3x9, 64 activations relu   | 1, 16,  512, 64         | 1, 64, 16, 512     |
+-------------+------------------------------------------+-------------------------+--------------------+
| ...         |                                          |                         |                    |
| Mp2,2       |                                          | 1, 8, 256, 64           | 1, 64, 8, 256      |
+-------------+------------------------------------------+-------------------------+--------------------+
| Cr3,9,64    |                                          | 1, 8, 256, 64           | 1, 64, 8, 256      |
| Do0.1,2     |                                          |                         |                    |
+-------------+------------------------------------------+-------------------------+--------------------+
| S1(1x0)1,3  | reshape (N,H,W,C) into N, 1, W,C*H       | 1, 1, 256, 64x8=512     | 1, 1024, 1, 256    |
+-------------+------------------------------------------+-------------------------+--------------------+
| Lbx200      | RNN b[irectional] on width-dimension (x) | 1, 1, 256, 400          | 1, 400, 1, 256     |
|             | with 200 output channels                 | (either forward (f) or  |                    |
|             |                                          | reverse (r) would yield |                    |
|             |                                          | 200-sized output)       |                    |
+-------------+------------------------------------------+-------------------------+--------------------+
| ...         | (same)                                   |                         |                    |
| Lbx200      | RNN b[irectional] on width-dimension (x) | 1, 1, 256, 400          | 1, 400, 1, 256     |
+-------------+------------------------------------------+-------------------------+--------------------+



.. toctree::
   :maxdepth: 3
   :caption: Contents:


Alphabet
===========

.. automodule:: character_classes
   :members:

.. automodule:: libs.alphabet
   :members:


